name: 'ðŸ§¬ Countinuous Everything'

on: [push]

env:
  IMAGE: docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/backend

jobs:

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check repository
        uses: actions/checkout@v3
        with:
          ref: trunk
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.IMAGE }}-builder:latest || true
          docker pull ${{ env.IMAGE }}-final:latest || true
      - name: Build images
        run: |
          docker build \
            --target builder \
            --cache-from ${{ env.IMAGE }}-builder:latest \
            --tag ${{ env.IMAGE }}-builder:latest \
            --file ./backend/Dockerfile.prod \
            "./backend"
          docker build \
            --cache-from ${{ env.IMAGE }}-final:latest \
            --tag ${{ env.IMAGE }}-final:latest \
            --file ./backend/Dockerfile.prod \
            "./backend"
      - name: Push images
        run: |
          docker push ${{ env.IMAGE }}-builder:latest
          docker push ${{ env.IMAGE }}-final:latest

  test:
    name: Test Docker Image
    runs-on: ubuntu-latest
    needs: build
    environment: development
    services:
      postgres:
        image: postgres:14.2-alpine
        env:
          POSTGRES_DB: ${{ secrets.PG_DB }}
          POSTGRES_USER : ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_PORT : ${{ secrets.PG_PORT }}
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      POSTGRES_DB: ${{ secrets.PG_DB }}
      POSTGRES_HOST: postgres
      POSTGRES_USER : ${{ secrets.PG_USER }}
      POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
      POSTGRES_PORT : ${{ secrets.PG_PORT }}

    steps:
      - name: Check repository
        uses: actions/checkout@v3
        with:
          ref: trunk
      - name: Log in to GitHub Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull images
        run: |
          docker pull ${{ env.IMAGE }}-builder:latest || true
          docker pull ${{ env.IMAGE }}-final:latest || true
      - name: Build images
        run: |
          docker build \
            --target builder \
            --cache-from ${{ env.IMAGE }}-builder:latest \
            --tag ${{ env.IMAGE }}-builder:latest \
            --file ./backend/Dockerfile.prod \
            "./backend"
          docker build \
            --cache-from ${{ env.IMAGE }}-final:latest \
            --tag ${{ env.IMAGE }}-final:latest \
            --file ./backend/Dockerfile.prod \
            "./backend"
      - name: Run container
        run: |
          docker run \
            -d \
            --name backend \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -e DATABASE_TEST_URL=${{ secrets.DATABASE_TEST_URL }} \
            -p 5003:8765 \
            ${{ env.IMAGE }}-final:latest
      - name: Pytest
        run: docker exec backend python -m pytest .
      - name: Flake8
        run: docker exec backend python -m flake8 .
      - name: Black
        run: docker exec backend python -m black . --check
      - name: isort
        run: docker exec backend python -m isort . --check-only
