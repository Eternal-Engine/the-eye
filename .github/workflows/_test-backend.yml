name: 'Test ðŸ”¬'

on: workflow_call

jobs:
  test:
      environment:
        name: development
      strategy:
        matrix:
          os: 
            - macos-latest
            - ubuntu-latest
          python-version:
            - "3.10"
          poetry-version:
            - "1.2.0b1"
          cache-path:
            - ~/Library/Caches/pypoetry
            - ~/.cache/pypoetry
          exclude:
            - os: ubuntu-latest
              cache-path: ~/Library/Caches/pypoetry
            - os: macos-latest
              cache-path: ~/.cache/pypoetry
      defaults:
        run:
          working-directory: backend/
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        DEBUG: ${{ secrets.DEBUG }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      runs-on: ${{ matrix.os }}
      steps:
        - name: Check repository
          uses: actions/checkout@v3
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v3
          with:
            python-version: ${{ matrix.python-version }}
        - name: Display Python version
          run: python -c "import sys; print(sys.version)"
        - name: Set up Poetry package manager
          uses: abatilo/actions-poetry@v2.1.3
          with:
            poetry-version: ${{ matrix.poetry-version }}
        - name: Display Poetry version
          run: |
            poetry --version
        - name: Upload cached Poetry dependencies
          id: cached-poetry-dependencies
          uses: actions/cache@v3.0.1
          with:
            path: |
              ${{ matrix.cache-path }}
            key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
            restore-keys: |
              ${{ runner.os }}-poetry-
        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          run: poetry install --no-interaction --no-root
        - name: Install test dependencies
          run: |
            poetry add pytest pytest-asyncio pytest-cov pytest-xdist
        - name: Test with Pytest-Cov
          run: |
            poetry run pytest --cov --cov-report xml .
        - name: Upload test report to Codecov
          uses: codecov/codecov-action@v2.1.0
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
            directory: backend/
