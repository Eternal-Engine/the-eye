name: 'Code Quality ðŸ’Ž'  

on: workflow_call

jobs:
  code-quality:
      strategy:
        matrix:
          os: 
            - macos-latest
            - ubuntu-latest
          python-version:
            - "3.10"
          poetry-version:
            - "1.2.0b1"
          cache-path:
            - ~/Library/Caches/pypoetry
            - ~/.cache/pypoetry
          exclude:
            - os: ubuntu-latest
              cache-path: ~/Library/Caches/pypoetry
            - os: macos-latest
              cache-path: ~/.cache/pypoetry
      defaults:
        run:
          working-directory: backend/
      runs-on: ${{ matrix.os }}

      steps:
        - name: Check repository
          uses: actions/checkout@v3
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v3
          with:
            python-version: ${{ matrix.python-version }}
        - name: Display Python version
          run: python -c "import sys; print(sys.version)"
        - name: Set up Poetry package manager
          uses: abatilo/actions-poetry@v2.1.3
          with:
            poetry-version: ${{ matrix.poetry-version }}
        - name: Display Poetry version
          run: |
            poetry --version
        - name: Upload cached Poetry dependencies
          id: cached-poetry-dependencies
          uses: actions/cache@v3.0.1
          with:
            path: |
              ${{ matrix.cache-path }}
            key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
            restore-keys: |
              ${{ runner.os }}-poetry-
        - name: Install dependencies
          if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
          run: poetry install --no-interaction --no-root
        - name: Install linter dependencies
          run: |
            poetry add black isort mypy pycodestyle pylint pyproject-flake8="0.0.1a2"
        - name: Lint with Black
          uses: psf/black@stable
        - name: Lint with Isort
          run: |
            poetry run isort . --check-only --profile black
        - name: Lint with PyLint
          run: |
            poetry run pylint app/
        - name: Lint with Flake8
          run: |
            # stop the build if there are Python syntax errors or undefined names
            poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        - name: Lint with MyPy
          run: |
            poetry run mypy . --pretty
